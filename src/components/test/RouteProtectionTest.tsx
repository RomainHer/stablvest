'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { useAuth } from '@/lib/hooks/useAuth';

export function RouteProtectionTest() {
  const { user } = useAuth();
  const [testResults, setTestResults] = useState<string[]>([]);

  const testRouteAccess = () => {
    setTestResults([]);
    
    // Test c√¥t√© client - v√©rifier l'√©tat de l'authentification
    const routes = ['/', '/portfolio', '/settings'];
    const results = routes.map(route => {
      if (user) {
        return `${route}: ‚úÖ Accessible (utilisateur connect√©)`;
      } else {
        return `${route}: ‚ùå Prot√©g√© (utilisateur d√©connect√©)`;
      }
    });
    
    setTestResults(results);
  };

  const clearResults = () => {
    setTestResults([]);
  };

  return (
    <Card className="w-full max-w-2xl mx-auto">
      <CardHeader>
        <CardTitle>üõ°Ô∏è Test de Protection des Routes</CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        
        {/* √âtat actuel */}
        <div className="p-3 bg-gray-50 rounded">
          <h4 className="font-semibold mb-2">√âtat de l'authentification :</h4>
          <div className="text-sm">
            <div><strong>Utilisateur:</strong> {user ? `‚úÖ Connect√© (${user.email})` : '‚ùå D√©connect√©'}</div>
            <div><strong>Routes prot√©g√©es:</strong> Dashboard, Portfolio, Settings</div>
            <div><strong>Routes publiques:</strong> Test, Auth</div>
            <div><strong>Comportement:</strong> Redirection automatique vers modal de connexion</div>
          </div>
        </div>

        {/* Instructions */}
        <div className="p-3 bg-blue-50 border border-blue-200 rounded">
          <h4 className="font-semibold mb-2">Instructions de test :</h4>
          <div className="text-sm space-y-1">
            <div>1. <strong>D√©connect√© :</strong> Les routes prot√©g√©es ouvrent automatiquement le modal de connexion</div>
            <div>2. <strong>Connect√© :</strong> Les routes prot√©g√©es sont accessibles normalement</div>
            <div>3. <strong>Test manuel :</strong> Essayez d'acc√©der directement aux URLs dans le navigateur</div>
          </div>
        </div>

        {/* Boutons de test */}
        <div className="flex space-x-2">
          <Button onClick={testRouteAccess} variant="outline">
            üß™ Tester l'√©tat de protection
          </Button>
          <Button onClick={clearResults} variant="ghost" size="sm">
            Effacer
          </Button>
        </div>

        {/* R√©sultats */}
        {testResults.length > 0 && (
          <div className="space-y-2">
            <h4 className="font-semibold">R√©sultats :</h4>
            <div className="p-3 bg-gray-50 rounded max-h-40 overflow-y-auto">
              {testResults.map((result, index) => (
                <div key={index} className="text-sm font-mono">
                  {result}
                </div>
              ))}
            </div>
          </div>
        )}

        {/* Test manuel */}
        <div className="p-3 bg-yellow-50 border border-yellow-200 rounded">
          <h4 className="font-semibold mb-2">Test manuel recommand√© :</h4>
          <div className="text-sm space-y-1">
            <div>‚Ä¢ Copiez ces URLs et testez-les dans un nouvel onglet :</div>
            <div className="font-mono text-xs space-y-1 mt-2">
              <div>http://localhost:3000/</div>
              <div>http://localhost:3000/portfolio</div>
              <div>http://localhost:3000/settings</div>
            </div>
            <div className="mt-2 text-xs">
              <strong>Attendu :</strong> Modal de connexion s'ouvre automatiquement si non connect√©
            </div>
          </div>
        </div>

        {/* Explication du test fetch */}
        <div className="p-3 bg-red-50 border border-red-200 rounded">
          <h4 className="font-semibold mb-2">‚ö†Ô∏è Pourquoi le test fetch ne fonctionnait pas :</h4>
          <div className="text-sm space-y-1">
            <div>‚Ä¢ <strong>fetch()</strong> fait une requ√™te HTTP c√¥t√© serveur</div>
            <div>‚Ä¢ <strong>ProtectedRoute</strong> fonctionne c√¥t√© client (React)</div>
            <div>‚Ä¢ Le serveur Next.js renvoie toujours la page (m√™me si elle est prot√©g√©e c√¥t√© client)</div>
            <div>‚Ä¢ <strong>Solution :</strong> Test bas√© sur l'√©tat d'authentification c√¥t√© client</div>
          </div>
        </div>

        {/* Guide de r√©solution */}
        <div className="text-sm text-gray-600 space-y-1">
          <div><strong>Fonctionnement de la protection :</strong></div>
          <div>‚Ä¢ Les pages se chargent c√¥t√© serveur</div>
          <div>‚Ä¢ ProtectedRoute v√©rifie l'authentification c√¥t√© client</div>
          <div>‚Ä¢ Si non connect√© : modal de connexion s'ouvre automatiquement</div>
          <div>‚Ä¢ Si connect√© : contenu de la page s'affiche</div>
        </div>

      </CardContent>
    </Card>
  );
} 